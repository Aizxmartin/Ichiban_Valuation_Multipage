
import streamlit as st
import json
from docx import Document
from datetime import datetime
from pathlib import Path

st.set_page_config(page_title="Module 9: GPT Review & Report Generator", layout="wide")
st.title("üß† Module 9: GPT Review & Market Report Generator")

json_path = Path("module8_summary.json")

if not json_path.exists():
    st.error("‚ùå Summary JSON from Module 8 not found.")
    st.stop()

# Load the JSON data
with open(json_path, "r") as f:
    summary = json.load(f)

# Display Summary Info
st.subheader("üìã Summary Review")
sp = summary["subject_property"]
st.markdown(f"**Address**: {sp['address']}")
st.markdown(f"**AG SF**: {sp['above_grade_sf']} | **Bedrooms**: {sp['bedrooms']} | **Bathrooms**: {sp['bathrooms']}")
st.markdown(f"**Online Estimate Average**: ${summary['online_estimate_average']:,}")
st.markdown(f"**Adjusted Comp Range**: ${summary['adjusted_price_range'][0]:,} ‚Äì ${summary['adjusted_price_range'][1]:,}")
st.markdown(f"**Average PPSF**: ${summary['average_ppsf']:,}")
if "average_days_in_mls" in summary and summary["average_days_in_mls"] is not None:
    st.markdown(f"**Avg Days in MLS**: {summary['average_days_in_mls']:.1f}")

# Create DOCX Report
if st.button("üìÑ Generate Market Report (.docx)"):
    doc = Document()
    doc.add_heading("Ichiban Enhanced Market Valuation Report", 0)

    doc.add_paragraph(f"Date: {datetime.now().strftime('%B %d, %Y')}")
    doc.add_heading("Subject Property", level=1)
    doc.add_paragraph(f"Address: {sp['address']}")
    doc.add_paragraph(f"Above Grade SF: {sp['above_grade_sf']} | Bedrooms: {sp['bedrooms']} | Bathrooms: {sp['bathrooms']}")

    doc.add_heading("Valuation Summary", level=1)
    doc.add_paragraph(f"Online Estimate Average: ${summary['online_estimate_average']:,}")
    doc.add_paragraph(f"Adjusted Comp Range: ${summary['adjusted_price_range'][0]:,} ‚Äì ${summary['adjusted_price_range'][1]:,}")
    doc.add_paragraph(f"Average Price per SF: ${summary['average_ppsf']:,}")
    if "average_days_in_mls" in summary and summary["average_days_in_mls"] is not None:
        doc.add_paragraph(f"Average Days in MLS: {summary['average_days_in_mls']:.1f}")

    doc.add_heading("Adjusted Comparable Sales", level=1)
    table = doc.add_table(rows=1, cols=9)
    hdr = table.rows[0].cells
    hdr[0].text = "Address"
    hdr[1].text = "AG SF"
    hdr[2].text = "Net Price"
    hdr[3].text = "AG Adj"
    hdr[4].text = "BGF Adj"
    hdr[5].text = "BGU Adj"
    hdr[6].text = "Total Adj"
    hdr[7].text = "Adj Price"
    hdr[8].text = "Days in MLS"

    for comp in summary["comps"]:
        row = table.add_row().cells
        row[0].text = str(comp["full_address"])
        row[1].text = str(comp["ag_sf"])
        row[2].text = f"${comp['net_price']:,}"
        row[3].text = f"${comp['ag_adj']:,}"
        row[4].text = f"${comp['bgf_adj']:,}"
        row[5].text = f"${comp['bgu_adj']:,}"
        row[6].text = f"${comp['total_adjustments']:,}"
        row[7].text = f"${comp['adjusted_price']:,}"
        row[8].text = str(comp.get("days_in_mls", "N/A"))

    doc.add_page_break()
    doc.add_paragraph("Generated by Ichiban Market Ranger")

    output_path = "Ichiban_Valuation_Report.docx"
    doc.save(output_path)
    with open(output_path, "rb") as file:
        btn = st.download_button(
            label="‚¨áÔ∏è Download Ichiban Valuation Report",
            data=file,
            file_name=output_path,
            mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
        )
